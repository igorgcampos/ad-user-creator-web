version: '3.8'

services:
  # =============================================================================
  # Frontend - React Application
  # =============================================================================
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://44.222.181.172:8000
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # =============================================================================
  # Backend - Express + Node.js Application
  # =============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - LOG_LEVEL=info
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - BACKEND_CORS_ORIGINS=http://44.222.181.172:3000,https://44.222.181.172:3000,http://44.222.181.172,https://44.222.181.172
      - AD_SERVER=${AD_SERVER:-ldap://localhost:389}
      - AD_DOMAIN=${AD_DOMAIN:-example.local}
      - AD_BASE_DN=${AD_BASE_DN:-DC=example,DC=local}
      - AD_USERNAME=${AD_USERNAME:-admin}
      - AD_PASSWORD=${AD_PASSWORD:-password}
      - AD_USE_SSL=${AD_USE_SSL:-false}
      - AD_USERS_OU=${AD_USERS_OU:-OU=Users,DC=example,DC=local}
      - AD_TIMEOUT=${AD_TIMEOUT:-10000}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-3600}
      - MIN_PASSWORD_LENGTH=${MIN_PASSWORD_LENGTH:-8}
      - PASSWORD_REQUIRE_UPPERCASE=${PASSWORD_REQUIRE_UPPERCASE:-true}
      - PASSWORD_REQUIRE_LOWERCASE=${PASSWORD_REQUIRE_LOWERCASE:-true}
      - PASSWORD_REQUIRE_NUMBERS=${PASSWORD_REQUIRE_NUMBERS:-true}
      - PASSWORD_REQUIRE_SPECIAL=${PASSWORD_REQUIRE_SPECIAL:-true}
    volumes:
      - backend-data:/app/data
      - backend-logs:/app/logs
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

# =============================================================================
# Volumes persistentes
# =============================================================================
volumes:
  backend-data:
    driver: local
  backend-logs:
    driver: local

# =============================================================================
# Rede personalizada
# =============================================================================
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 